buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
}
plugins {
	id "java"
	id "net.ltgt.apt" version "0.21"
	id "org.ajoberstar.grgit" version "3.1.1"
}
repositories {
	mavenCentral()
	if (findProperty("repositoryUrl")) {
		maven {
			url findProperty("repositoryUrl")
		}
	} else {
		jcenter()
		mavenCentral()
		maven {
			url "https://repository.apache.org/snapshots"
		}
		maven {
			url "https://oss.sonatype.org/content/repositories/snapshots"
		}
		maven {
			url "https://oss.jfrog.org/jfrog-dependencies"
		}
	}
}
sourceCompatibility = 8
targetCompatibility = 8
ext {
	buildLibsPath = "build${File.separator}libs"
	connectorSrcDir = "${project.buildDir}${File.separator}flink-connectors"
	connectorJarDir = "${connectorSrcDir}${File.separator}${buildLibsPath}"
}
wrapper {
	gradleVersion = "4.10.3"
}
import org.ajoberstar.grgit.Grgit
task cloneConnectorRepo {
	doLast {
		def destDir = file(connectorSrcDir)
		if(destDir.exists()) {
			if(destDir.isDirectory()) {
				if(0 < destDir.list().length) {
					return
				}
			} else {
				throw new GradleException("${connectorSrcDir} is not a directory")
			}
		}
		if(!destDir.exists()) {
			def gitRepo = Grgit.clone {
				uri = "https://github.com/pravega/flink-connectors.git"
				dir = connectorSrcDir
			}
			gitRepo.reset {
				commit = connectorCommit
				mode = "hard"
			}
		}
	}
}
task connectorJar(type: Exec, dependsOn: cloneConnectorRepo) {
	workingDir connectorSrcDir
	commandLine "./gradlew", "-PpravegaVersion=${pravegaVersion}", "jar"
}
compileJava.dependsOn += connectorJar
configurations.all {
	resolutionStrategy {
		force "org.projectlombok:lombok:1.18.6"
	}
}
dependencies {
	compileOnly(
		"org.projectlombok:lombok:1.18.6",
	)
	compile(
		"org.apache.flink:flink-streaming-java_${flinkScalaVersion}:${flinkVersion}",
		fileTree(dir: connectorJarDir, include: "*.jar"),
	)
	compile(group: 'io.pravega', name: 'pravega-client', version: pravegaVersion) {
		exclude group:  'org.slf4j', module: 'slf4j-api'
		exclude group: 'org.projectlombok', module: 'lombok'
		exclude group: 'org.apache.curator', module: 'curator-recipes'
	}
}
jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes(
			"Implementation-Title": project.name,
			"Implementation-Version": project.version,
			"Main-Class": "io.pravega.flink.benchmark.MessageRateAccountingJob",
		)
	}
	from configurations
		.runtime
		.copyRecursive()
		.collect {
			zipTree(it)
		}
}